import map_info as m

from typing import Dict, Tuple, List
from dataclasses import dataclass


ContinentCoordinatePreEODOffset = (+32768, +16384)


# All of this data here was recorded before EoD and thus needs to be offset by
# ContinentCoordinatePreEODOffset eventually this will be built into the data
# itself but for now it is just added in the building function.
raw_portals: Dict[str, Dict[int, Tuple[float, float]]] = {
	"001": {m.VERDANT_BRINK: (877, 16061), m.AURIC_BASIN: (790, 16219) },
	"002": {m.AURIC_BASIN: (2394, 18790), m.TANGLED_DEPTHS: (2915, 18296) },
	"003": {m.TANGLED_DEPTHS: (2902, 19509), m.DRAGONS_STAND: (3776, 19771) },
	"004": {m.THE_SILVERWASTES: (4155, 15495), m.VERDANT_BRINK: (3750, 15250) },
	"005": {m.BRISBAN_WILDLANDS: (5974, 15604), m.THE_SILVERWASTES: (5865, 15283) },
	"006": {m.BRISBAN_WILDLANDS: (6039, 17105), m.HARATHI_HINTERLANDS: (5559, 16744) },
	"007": {m.METRICA_PROVINCE: (8011, 17021), m.BRISBAN_WILDLANDS: (8082, 17270) },
	"008": {m.KESSEX_HILLS: (9492, 14615), m.BRISBAN_WILDLANDS: (9218, 14666) },
	"009": {m.CALEDON_FOREST: (9443, 16316), m.BRISBAN_WILDLANDS: (9244, 16368) },
	"010": {m.THE_GROVE: (10229, 20633), m.CALEDON_FOREST: (9926, 20038) },
	"011": {m.METRICA_PROVINCE: (9130, 17658), m.CALEDON_FOREST: (9435, 17664) },
	"012": {m.CALEDON_FOREST: (11061, 16191), m.KESSEX_HILLS: (11090, 16023)},
	"013": {m.KESSEX_HILLS: (12232, 14028), m.QUEENSDALE: (12234, 14141)},
	"014": {m.KESSEX_HILLS: (10301, 14182), m.QUEENSDALE: (10476, 13932)},
	"015": {m.KESSEX_HILLS: (13353, 14230), m.GENDARRAN_FIELDS: (13561, 14110)},
	"016": {m.DIVINITYS_REACH: (11900, 10461), m.LAKE_DORIC: (12217, 10587)},
	"017": {m.LAKE_DORIC: (13385, 10069), m.HARATHI_HINTERLANDS: (13623, 10120)},
	"018": {m.DIVINITYS_REACH: (11245, 11602), m.QUEENSDALE: (11021, 11934)},
	"019": {m.QUEENSDALE: (13327, 12613), m.GENDARRAN_FIELDS: (13523, 12681)},
	"020": {m.GENDARRAN_FIELDS: (14344, 12335), m.HARATHI_HINTERLANDS: (14341, 12140)},
	"021": {m.GENDARRAN_FIELDS: (15718, 12361), m.HARATHI_HINTERLANDS: (15749, 12195)},
	"022": {m.GENDARRAN_FIELDS: (17487, 13631), m.LORNARS_PASS: (17758, 13600)},
	"023": {m.GENDARRAN_FIELDS: (17544, 12749), m.SNOWDEN_DRIFTS: (17780, 12754)},
	"024": {m.GENDARRAN_FIELDS: (15879, 14217), m.LIONS_ARCH: (16119, 14380)},
	"025": {m.LIONS_ARCH: (16823, 15764), m.BLOODTIDE_COAST: (16767, 15921)},
	"026": {m.LIONS_ARCH: (17448, 15031), m.LORNARS_PASS: (17786, 15120)},
	"027": {m.BLOODTIDE_COAST: (17545, 16082), m.LORNARS_PASS: (17784, 16001)},
	"028": {m.BLOODTIDE_COAST: (17602, 17798), m.LORNARS_PASS: (17795, 17828)},
	"029": {m.BLOODTIDE_COAST: (15542, 18835), m.SPARKFLY_FEN: (15529, 19192)},
	"030": {m.LORNARS_PASS: (19344, 16580), m.DREDGEHAUNT_CLIFFS: (19618, 16380)},
	"031": {m.LORNARS_PASS: (19035, 18066), m.TIMBERLINE_FALLS: (19184, 18273)},
	"032": {m.DREDGEHAUNT_CLIFFS: (20665, 17971), m.TIMBERLINE_FALLS: (20618, 18243)},
	"033": {m.SNOWDEN_DRIFTS: (19107, 13401), m.LORNARS_PASS: (19178, 13188)},
	"034": {m.SNOWDEN_DRIFTS: (21645, 11577), m.WAYFARER_FOOTHILLS: (22032, 11797)},
	"035": {m.SNOWDEN_DRIFTS: (20977, 11386), m.FROSTGORGE_SOUND: (21044, 11204)},
	"036": {m.HOELBRAK: (21428, 14519), m.WAYFARER_FOOTHILLS: (22148, 14491)},
	"037": {m.HOELBRAK: (21086, 14721), m.DREDGEHAUNT_CLIFFS: (20942, 15114)},
	"038": {m.WAYFARER_FOOTHILLS: (23110, 11450), m.FROSTGORGE_SOUND: (23061, 11163)},
	"039": {m.WAYFARER_FOOTHILLS: (23356, 11968), m.DIESSA_PLATEAU: (23680, 11995)},
	"040": {m.FROSTGORGE_SOUND: (23706, 9704), m.FIREHEART_RISE: (23993, 9741) },
	"041": {m.FROSTGORGE_SOUND: (21330, 8244), m.BITTERFROST_FRONTIER: (21380, 8046) },
	"042": {m.BLACK_CITADEL: (24301, 13685), m.DIESSA_PLATEAU: (24090, 13465)},
	"043": {m.BLACK_CITADEL: (25049, 14227), m.PLAINS_OF_ASHFORD: (25270, 14411)},
	"044": {m.PLAINS_OF_ASHFORD: (26719, 13660), m.DIESSA_PLATEAU: (26847, 13506)},
	"045": {m.PLAINS_OF_ASHFORD: (29104, 14842), m.BLAZERIDGE_STEPPES: (29269, 14884)},
	"046": {m.PLAINS_OF_ASHFORD: (28217, 13642), m.IRON_MARCHES: (28194, 13489)},
	"047": {m.FIELDS_OF_RUIN: (30932, 16429), m.BLAZERIDGE_STEPPES: (30928, 16180)},
	"048": {m.BLAZERIDGE_STEPPES: (29314, 12615), m.IRON_MARCHES: (29103, 12452)},
	"049": {m.IRON_MARCHES: (27235, 10757), m.FIREHEART_RISE: (27059, 10748)},
	"050": {m.TIMBERLINE_FALLS: (19532, 21222), m.MOUNT_MAELSTROM: (19583, 21431)},
	"051": {m.SPARKFLY_FEN: (17643, 21789), m.MOUNT_MAELSTROM: (17882, 21744)},
	"052": {m.SPARKFLY_FEN: (16978, 22219), m.STRAITS_OF_DEVASTATION: (16980, 22547)},
	"053": {m.MOUNT_MAELSTROM: (17870, 23464), m.STRAITS_OF_DEVASTATION: (17679, 23537)},
	"054": {m.STRAITS_OF_DEVASTATION: (14575, 24541), m.MALCHORS_LEAP: (14352, 24600)},
	"055": {m.MALCHORS_LEAP: (11926, 25129), m.CURSED_SHORE: (11731, 25347)},
	"056": {m.RATA_SUM: (6114, 20837), m.METRICA_PROVINCE: (7281, 20046) },
	"057": {m.LIONS_ARCH: (16646, 14662), m.SOUTHSUN_COVE: (13872, 20331)},
	"058": {m.LIONS_ARCH: (16680, 14699), m.HOELBRAK: (20501, 14271)},
	"059": {m.LIONS_ARCH: (16663, 14799), m.BLACK_CITADEL: (24051, 14060)},
	"060": {m.LIONS_ARCH: (16621, 14815), m.THE_GROVE: (10450, 20912)},
	"061": {m.LIONS_ARCH: (16550, 14759), m.RATA_SUM: (6003, 20530) },
	"062": {m.LIONS_ARCH: (16592, 14666), m.DIVINITYS_REACH: (11341, 11005)},
	"063": {m.DIVINITYS_REACH: (11937, 10966), m.FIELDS_OF_RUIN: (29065, 18418)},
	"064": {m.STRAITS_OF_DEVASTATION: (17390, 23393), m.GENDARRAN_FIELDS: (16706, 12619)},
	"065": {m.STRAITS_OF_DEVASTATION: (17418, 23392), m.BLOODTIDE_COAST: (16672, 16653)},
	"066": {m.STRAITS_OF_DEVASTATION: (17442, 23401), m.LORNARS_PASS: (17815, 15000)},
	# Look at the top of this object before adding another variable here.
}


@dataclass
class PortalInfo:
	uid: str
	location: Tuple[float, float]


def get_portal_data() -> Dict[int, List[PortalInfo]]:
	portals: Dict[int, List[PortalInfo]] = {}
	for identifier, portal in raw_portals.items():
		for map_id, point in portal.items():
			if map_id not in portals:
				portals[map_id] = []
			portals[map_id].append(PortalInfo(
				uid=identifier,
				location=(
					point[0]+ContinentCoordinatePreEODOffset[0],
					point[1]+ContinentCoordinatePreEODOffset[1]
				)
			))
	return portals


