from map_info import M
from typing import Dict, Tuple, List
from dataclasses import dataclass


ContinentCoordinatePreEODOffset = (+32768, +16384)


# All of this data here was recorded before EoD and thus needs to be offset by
# ContinentCoordinatePreEODOffset eventually this will be built into the data
# itself but for now it is just added in the building function.
raw_portals: Dict[str, Dict[int, Tuple[float, float]]] = {
	"001": {M.VERDANT_BRINK.i: (877, 16061), M.AURIC_BASIN.i: (790, 16219) },
	"002": {M.AURIC_BASIN.i: (2394, 18790), M.TANGLED_DEPTHS.i: (2915, 18296) },
	"003": {M.TANGLED_DEPTHS.i: (2902, 19509), M.DRAGONS_STAND.i: (3776, 19771) },
	"004": {M.THE_SILVERWASTES.i: (4155, 15495), M.VERDANT_BRINK.i: (3750, 15250) },
	"005": {M.BRISBAN_WILDLANDS.i: (5974, 15604), M.THE_SILVERWASTES.i: (5865, 15283) },
	"006": {M.BRISBAN_WILDLANDS.i: (6039, 17105), M.HARATHI_HINTERLANDS.i: (5559, 16744) },
	"007": {M.METRICA_PROVINCE.i: (8011, 17021), M.BRISBAN_WILDLANDS.i: (8082, 17270) },
	"008": {M.KESSEX_HILLS.i: (9492, 14615), M.BRISBAN_WILDLANDS.i: (9218, 14666) },
	"009": {M.CALEDON_FOREST.i: (9443, 16316), M.BRISBAN_WILDLANDS.i: (9244, 16368) },
	"010": {M.THE_GROVE.i: (10229, 20633), M.CALEDON_FOREST.i: (9926, 20038) },
	"011": {M.METRICA_PROVINCE.i: (9130, 17658), M.CALEDON_FOREST.i: (9435, 17664) },
	"012": {M.CALEDON_FOREST.i: (11061, 16191), M.KESSEX_HILLS.i: (11090, 16023)},
	"013": {M.KESSEX_HILLS.i: (12232, 14028), M.QUEENSDALE.i: (12234, 14141)},
	"014": {M.KESSEX_HILLS.i: (10301, 14182), M.QUEENSDALE.i: (10476, 13932)},
	"015": {M.KESSEX_HILLS.i: (13353, 14230), M.GENDARRAN_FIELDS.i: (13561, 14110)},
	"016": {M.DIVINITYS_REACH.i: (11900, 10461), M.LAKE_DORIC.i: (12217, 10587)},
	"017": {M.LAKE_DORIC.i: (13385, 10069), M.HARATHI_HINTERLANDS.i: (13623, 10120)},
	"018": {M.DIVINITYS_REACH.i: (11245, 11602), M.QUEENSDALE.i: (11021, 11934)},
	"019": {M.QUEENSDALE.i: (13327, 12613), M.GENDARRAN_FIELDS.i: (13523, 12681)},
	"020": {M.GENDARRAN_FIELDS.i: (14344, 12335), M.HARATHI_HINTERLANDS.i: (14341, 12140)},
	"021": {M.GENDARRAN_FIELDS.i: (15718, 12361), M.HARATHI_HINTERLANDS.i: (15749, 12195)},
	"022": {M.GENDARRAN_FIELDS.i: (17487, 13631), M.LORNARS_PASS.i: (17758, 13600)},
	"023": {M.GENDARRAN_FIELDS.i: (17544, 12749), M.SNOWDEN_DRIFTS.i: (17780, 12754)},
	"024": {M.GENDARRAN_FIELDS.i: (15879, 14217), M.LIONS_ARCH.i: (16119, 14380)},
	"025": {M.LIONS_ARCH.i: (16823, 15764), M.BLOODTIDE_COAST.i: (16767, 15921)},
	"026": {M.LIONS_ARCH.i: (17448, 15031), M.LORNARS_PASS.i: (17786, 15120)},
	"027": {M.BLOODTIDE_COAST.i: (17545, 16082), M.LORNARS_PASS.i: (17784, 16001)},
	"028": {M.BLOODTIDE_COAST.i: (17602, 17798), M.LORNARS_PASS.i: (17795, 17828)},
	"029": {M.BLOODTIDE_COAST.i: (15542, 18835), M.SPARKFLY_FEN.i: (15529, 19192)},
	"030": {M.LORNARS_PASS.i: (19344, 16580), M.DREDGEHAUNT_CLIFFS.i: (19618, 16380)},
	"031": {M.LORNARS_PASS.i: (19035, 18066), M.TIMBERLINE_FALLS.i: (19184, 18273)},
	"032": {M.DREDGEHAUNT_CLIFFS.i: (20665, 17971), M.TIMBERLINE_FALLS.i: (20618, 18243)},
	"033": {M.SNOWDEN_DRIFTS.i: (19107, 13401), M.LORNARS_PASS.i: (19178, 13188)},
	"034": {M.SNOWDEN_DRIFTS.i: (21645, 11577), M.WAYFARER_FOOTHILLS.i: (22032, 11797)},
	"035": {M.SNOWDEN_DRIFTS.i: (20977, 11386), M.FROSTGORGE_SOUND.i: (21044, 11204)},
	"036": {M.HOELBRAK.i: (21428, 14519), M.WAYFARER_FOOTHILLS.i: (22148, 14491)},
	"037": {M.HOELBRAK.i: (21086, 14721), M.DREDGEHAUNT_CLIFFS.i: (20942, 15114)},
	"038": {M.WAYFARER_FOOTHILLS.i: (23110, 11450), M.FROSTGORGE_SOUND.i: (23061, 11163)},
	"039": {M.WAYFARER_FOOTHILLS.i: (23356, 11968), M.DIESSA_PLATEAU.i: (23680, 11995)},
	"040": {M.FROSTGORGE_SOUND.i: (23706, 9704), M.FIREHEART_RISE.i: (23993, 9741) },
	"041": {M.FROSTGORGE_SOUND.i: (21330, 8244), M.BITTERFROST_FRONTIER.i: (21380, 8046) },
	"042": {M.BLACK_CITADEL.i: (24301, 13685), M.DIESSA_PLATEAU.i: (24090, 13465)},
	"043": {M.BLACK_CITADEL.i: (25049, 14227), M.PLAINS_OF_ASHFORD.i: (25270, 14411)},
	"044": {M.PLAINS_OF_ASHFORD.i: (26719, 13660), M.DIESSA_PLATEAU.i: (26847, 13506)},
	"045": {M.PLAINS_OF_ASHFORD.i: (29104, 14842), M.BLAZERIDGE_STEPPES.i: (29269, 14884)},
	"046": {M.PLAINS_OF_ASHFORD.i: (28217, 13642), M.IRON_MARCHES.i: (28194, 13489)},
	"047": {M.FIELDS_OF_RUIN.i: (30932, 16429), M.BLAZERIDGE_STEPPES.i: (30928, 16180)},
	"048": {M.BLAZERIDGE_STEPPES.i: (29314, 12615), M.IRON_MARCHES.i: (29103, 12452)},
	"049": {M.IRON_MARCHES.i: (27235, 10757), M.FIREHEART_RISE.i: (27059, 10748)},
	"050": {M.TIMBERLINE_FALLS.i: (19532, 21222), M.MOUNT_MAELSTROM.i: (19583, 21431)},
	"051": {M.SPARKFLY_FEN.i: (17643, 21789), M.MOUNT_MAELSTROM.i: (17882, 21744)},
	"052": {M.SPARKFLY_FEN.i: (16978, 22219), M.STRAITS_OF_DEVASTATION.i: (16980, 22547)},
	"053": {M.MOUNT_MAELSTROM.i: (17870, 23464), M.STRAITS_OF_DEVASTATION.i: (17679, 23537)},
	"054": {M.STRAITS_OF_DEVASTATION.i: (14575, 24541), M.MALCHORS_LEAP.i: (14352, 24600)},
	"055": {M.MALCHORS_LEAP.i: (11926, 25129), M.CURSED_SHORE.i: (11731, 25347)},
	"056": {M.RATA_SUM.i: (6114, 20837), M.METRICA_PROVINCE.i: (7281, 20046) },
	"057": {M.LIONS_ARCH.i: (16646, 14662), M.SOUTHSUN_COVE.i: (13872, 20331)},
	"058": {M.LIONS_ARCH.i: (16680, 14699), M.HOELBRAK.i: (20501, 14271)},
	"059": {M.LIONS_ARCH.i: (16663, 14799), M.BLACK_CITADEL.i: (24051, 14060)},
	"060": {M.LIONS_ARCH.i: (16621, 14815), M.THE_GROVE.i: (10450, 20912)},
	"061": {M.LIONS_ARCH.i: (16550, 14759), M.RATA_SUM.i: (6003, 20530) },
	"062": {M.LIONS_ARCH.i: (16592, 14666), M.DIVINITYS_REACH.i: (11341, 11005)},
	"063": {M.DIVINITYS_REACH.i: (11937, 10966), M.FIELDS_OF_RUIN.i: (29065, 18418)},
	"064": {M.STRAITS_OF_DEVASTATION.i: (17390, 23393), M.GENDARRAN_FIELDS.i: (16706, 12619)},
	"065": {M.STRAITS_OF_DEVASTATION.i: (17418, 23392), M.BLOODTIDE_COAST.i: (16672, 16653)},
	"066": {M.STRAITS_OF_DEVASTATION.i: (17442, 23401), M.LORNARS_PASS.i: (17815, 15000)},
	# Look at the top of this object before adding another variable here.
}


@dataclass
class PortalInfo:
	uid: str
	location: Tuple[float, float]


def get_portal_data() -> Dict[int, List[PortalInfo]]:
	portals: Dict[int, List[PortalInfo]] = {}
	for identifier, portal in raw_portals.items():
		for map_id, point in portal.items():
			if map_id not in portals:
				portals[map_id] = []
			portals[map_id].append(PortalInfo(
				uid=identifier,
				location=(
					point[0]+ContinentCoordinatePreEODOffset[0],
					point[1]+ContinentCoordinatePreEODOffset[1]
				)
			))
	return portals
